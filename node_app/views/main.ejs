<!DOCTYPE HTML>
<html>

<head>
   <title>Wikianalysis</title>



   <script src="https://api.gazerecorder.com/GazeCloudAPI.js"></script>
   <script src="https://code.jquery.com/jquery-1.6.2.min.js"></script>
   <script src="https://files.codepedia.info/files/uploads/iScripts/html2canvas.js"> </script>

   <style type="text/css">
      body {
         overflow: hidden;
      }
   </style>
   <script type="text/javascript">
      var stream;
      var snapshot;
      var deviceId;
      var valid = false
      var gazeXlist = [];
      var gazeYlist = [];
      var url = "https://en.wikipedia.org/wiki/Main_Page"
      var time

      function PlotGaze(GazeData) {
         var x = GazeData.docX;
         var y = GazeData.docY;
         //console.log(x)
         gazeXlist.push(GazeData.GazeX)
         gazeYlist.push(GazeData.GazeY)
      }
      function postToDatabase() {
         data = {}
         console.log('posting to database')
         data.sessionId = sessionStorage.sessionId
         data.image = snapshot
         data.timestamp = Date.now()
         data.gazeX = gazeXlist
         data.gazeY = gazeYlist
         data.sysId = localStorage.sysId
         data.url = url
         console.log(data.url)
         $.ajax({
            type: 'POST',
            data: JSON.stringify(data),
            contentType: 'application/json',
            url: '/',
            success: function (data) {
               console.log('success');
            }
         });
         gazeXlist = []
         gazeYlist = []
      }
      async function getSnapshot() {

         const vid = document.createElement('video');
         vid.srcObject = stream;
         await vid.play();
         const canvas = document.createElement('canvas');
         canvas.width = vid.videoWidth;
         canvas.height = vid.videoHeight;
         canvas.getContext('2d').drawImage(vid, 0, 0);
         track = stream.getTracks()[0]
         snapshot = canvas.toDataURL()
         //console.log(snapshot)
         return canvas.toDataURL()
      }
      //////set callbacks/////////
      GazeCloudAPI.UseClickRecalibration = false
      GazeCloudAPI.OnCalibrationComplete = async function () {
         console.log('gaze Calibration Complete')

         setTimeout(async function () {
            var gazeXlist = [];
            var gazeYlist = [];
            await getSnapshot()
            console.log('snapshot created')
            valid = true


         }, 4000)
      }
      //GazeCloudAPI.CalibrationType = 1
      GazeCloudAPI.OnCamDenied = function () { console.log('camera  access denied') }
      GazeCloudAPI.OnError = function (msg) { console.log('err: ' + msg) }
      GazeCloudAPI.OnResult = PlotGaze;

      async function startCapture() {
         stream = await navigator.mediaDevices.getDisplayMedia(
            {
               video: {
                  mediaSource: 'browser',
               },
            }
         );

         GazeCloudAPI.StartEyeTracking();
         time = new Date()
         time = time.getTime()

      }
      function stopCapture() {
         GazeCloudAPI.StopEyeTracking();
         temp = new Date()
         temp = temp.getTime()
         milisec = temp - time
         sec = Math.floor(milisec / 1000)
         min = Math.floor(sec / 60)
         sec = sec % 60
         alert(`your reading session lasted: ${min}:${sec}`)
         stream.getTracks().forEach(track => track.stop())
         console.log('calling postdatabase function')
         postToDatabase()
         valid = false
      }
      window.addEventListener('load', function () {

         if (typeof localStorage.sysId == 'undefined') {
            localStorage.sysId = Math.floor(Math.random() * 100000000000000000000)
            console.log("your unique ID is ", localStorage.sysId)
         }
         else {
            console.log("your unique ID is ", localStorage.sysId)
         }
         if (typeof sessionStorage.sysId == 'undefined') {
            sessionStorage.sessionId = Math.floor(Math.random() * 100000000000000000000)
            console.log("your session ID is ", sessionStorage.sessionId)
         }
         else {
            console.log("your session ID is ", sessionStorage.sessionId)
         }

      })

      function Search(e) {
         e.preventDefault()
         console.log(e.target)
      }
      /// url capturing


   </script>
</head>

<body>
   <div>
      <button type="button" onclick="startCapture();">Start</button>
      <button type="button" onclick="stopCapture()">Stop</button>
      <form id="mysearch">
         <input type="text" value="" id="SearchInput" name="search" />
         <input type="submit" value="Go">
      </form>
   </div>


   <iframe id="myEmbed" src="/json_placeholder/w/index.php?action=render&title=<%= myVar %>" style="overflow: hidden; height: 100%;
         width: 100%; position: absolute;"></iframe>


   <!-- <div id="gaze"
      style='position: absolute;display:none;width: 100px;height: 100px;border-radius: 50%;border: solid 2px  rgba(255, 255,255, .2);	box-shadow: 0 0 100px 3px rgba(125, 125,125, .5);	pointer-events: none;	z-index: 999999'>
   </div> -->



   <script>

      document.getElementById('mysearch').onsubmit = function (e) {
         e.preventDefault()
         console.log(e.target)
         form = new FormData(e.target)
         var data = {
            "search": form.get("search")
         }
         var title
         $.ajax({
            type: 'POST',
            data: JSON.stringify(data),
            contentType: 'application/json',
            url: '/temp',
            success: function (data) {
               console.log('success');
               console.log(data);
               title = data
               document.getElementById('myEmbed').src = "/json_placeholder/w/index.php?action=render&title=" + title;
            }
         });


      }

      document.getElementById('myEmbed').onload = async function () {

         if (typeof stream == 'undefined') {
            console.log("stream has not started")
         }
         else {
            console.log('calling postdatabase function')
            postToDatabase()

            await getSnapshot()
            console.log('snapshot created')
            valid = true
         }


         var frm = document.getElementById("myEmbed");
         frm = frm.contentWindow;
         url = frm.location.href
         let link = document.createElement("link");
         link.href = "load.php?debug=false&lang=en&modules=mediawiki.legacy.commonPrint,shared|skins.vector.styles&only=styles&skin=vector&*";      /**** your CSS file ****/
         link.rel = "stylesheet";
         //link.type = "text/javascript"; 
         document.getElementById("myEmbed").contentDocument.head.appendChild(link)

         let link1 = document.createElement("link");
         link1.href = "/stylesheets/wiki.css";      /**** your CSS file ****/
         link1.rel = "stylesheet";
         link1.type = "text/css";
         document.getElementById("myEmbed").contentDocument.head.appendChild(link1)

         let link2 = document.createElement("link");
         link2.href = "/javascripts/load.php";      /**** your CSS file ****/
         link2.rel = "stylesheet";
         link2.type = "text/javascript";
         document.getElementById("myEmbed").contentDocument.head.appendChild(link2)

         frm.onclick = function (e) {
            e.preventDefault();
            console.log('target:', e.target.getAttribute('href'));
            var temp = e.target.getAttribute('href');
            var key_word = temp.replace("//en.wikipedia.org/wiki/", "");
            console.log(key_word);
            document.getElementById('myEmbed').src = "/json_placeholder/w/index.php?action=render&title=" + key_word;
         }

         var timer = null;
         frm.onscroll = function () {
            if (valid === true) {
               console.log('calling postdatabase function')
               postToDatabase()
               valid = false
            }
            if (timer !== null) {
               clearTimeout(timer);
            }
            timer = setTimeout(async function () {

               await getSnapshot()
               console.log('snapshot created')
               valid = true


            }, 4000)

         }
      }
//}
   </script>

</body>

</html>